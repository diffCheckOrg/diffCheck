name: yak-build

on:
  workflow_dispatch:  ## DEBUG
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  sync-version:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install Python and pythonnet
      uses: actions/setup-python@v2
      with:
        python-version: '3.9.10'

    - name: Install Python dependencies
      run: |
          python -m pip install --upgrade pip
          pip install invoke

    - name: Update the version across the project and commit the changes
      run: invoke versionize

    - name: Install GitHub CLI
      run: |
        choco install gh
    - name: Authenticate GitHub CLI
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token

    - name: Create a new branch and commit the version change
      # Delete branch remotely version-sync-branch (if exists)
      run: |
        git fetch --prune
        if git branch -r | grep -q 'origin/version-sync-branch'; then
          git push origin --delete version-sync-branch
        else
          echo "Branch version-sync-branch does not exist."
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: bash
      # Create new branch and commit version change
    - run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git checkout -b version-sync-branch
        git commit -am "ACTION_BOT: Sync version for release"
        git push --set-upstream origin version-sync-branch
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Close existing pull requests for version-sync-branch
    - run: |
        gh pr list --state open --head version-sync-branch --json number --jq '.[].number' | ForEach-Object { gh pr close $_ }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: pwsh
      # Create pull request
    - run: |
        gh pr create --title "ACTION_BOT: Sync version for release" --body "Sync version for release" --base main --head version-sync-branch --label ACTION_BOT
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Merge pull request
    - run: |
        $pr = gh pr list --head version-sync-branch --json number --jq '.[0].number'
        gh pr merge $pr --squash --delete-branch --admin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: pwsh

  # build-ghusers:
  #   runs-on: windows-latest

  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Install Python and pythonnet
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.9.10'

  #   - name: Install Python dependencies
  #     run: |
  #         python -m pip install --upgrade pip
  #         pip install invoke
  #         pip install pythonnet

  #   - name: Flag the ghuser codes with the correct package version
  #     run: invoke flagerize

  #   - name: commit the changes to the repo
  #     run: git commit -am "Update the version across the project"









  #   - name: Flag the ghuser codes with the correct package version
  #     run: invoke flagerize

  #   - name: Build the ghuser components
  #     run: invoke componentize

  #   - name: Save artifact the ghuser components
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: ghuser_components_artifact

  # build-yak-package:
  #   runs-on: windows-latest

  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Install Python and pythonnet
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.9.10'

  #   - name: Install Python dependencies
  #     run: |
  #         python -m pip install --upgrade pip
  #         pip install invoke
  #         pip install pythonnet

  #   - name: Update the version across the project
  #     run: invoke versionize

  #   - name: Flag the ghuser codes with the correct package version
  #     run: invoke flagerize

  #   - name: Build the yak package
  #     run: invoke yakerize

  #   - name: Save artifact the yak package as an artifact
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: yak_package_artifact
  #       path: build/yak/*.yak